name: Build - new-universe-demo
on:
  push:
    branches: "**"
    tags-ignore: "**"
env:
  APP_NAME: new-universe-demo
  HOME: /actions-runner/_work
  GITHUB_ACCESS_TOKEN: ${{ secrets.CI_BOT_TOKEN }}
  UNIVERSE_PUBLIC_GITHUB_SHA: ${{ github.sha }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  DOCKER_USERNAME: ${{ secrets.HARBOR_DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.HARBOR_DOCKER_PASSWORD }}
  DOCKER_REGISTRY: c.rzp.io
  AWS_DEFAULT_REGION: ap-south-1
  AWS_S3_STAGE_BUCKET_NAME: rzp-1018-nonprod-new-universe-demo
  AWS_S3_STAGE_ROLE: arn:aws:iam::101860328116:role/gha-stage-new-universe-demo-action
  AWS_S3_PROD_BUCKET_NAME: rzp-1415-prod-new-universe-demo
  AWS_S3_PROD_ROLE: arn:aws:iam::141592612890:role/gha-prod-new-universe-demo-action
jobs:
  beta-build:
    name: Beta Build
    runs-on: self-hosted
    timeout-minutes: 60
    permissions:
      id-token: write
      contents: write
      pull-requests: write
    env:
      STAGE: beta
    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.CI_BOT_TOKEN }}
      - name: Setup Node v14.19
        uses: actions/setup-node@v2
        with:
          node-version: "14.19"
      - name: Install Yarn
        run: npm install -g yarn
      - name: Setup Cache & Install Dependencies
        uses: bahmutov/npm-install@v1.8.15
        with:
          install-command: yarn --frozen-lockfile
      - name: Set Version
        run: yarn universe set-version
      - name: Login to Harbor
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.HARBOR_DOCKER_USERNAME }}
          password: ${{ secrets.HARBOR_DOCKER_PASSWORD }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ env.AWS_S3_STAGE_ROLE }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-duration-seconds: 900
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Docker Image
        id: build-docker-image
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{env.DOCKER_REGISTRY}}/razorpay/${{env.APP_NAME}}:${{env.VERSION}}
          push: true
          file: ./Dockerfile
          build-args: |
            APP_NAME=${{env.APP_NAME}}
            STAGE=${{env.STAGE}}
            UNIVERSE_PUBLIC_GITHUB_SHA=${{env.UNIVERSE_PUBLIC_GITHUB_SHA}}
            AWS_S3_BUCKET_NAME=${{env.AWS_S3_STAGE_BUCKET_NAME}}
            AWS_DEFAULT_REGION=${{env.AWS_DEFAULT_REGION}}
            VERSION=${{env.VERSION}}
          secrets: |
            "GITHUB_ACCESS_TOKEN=${{env.GITHUB_ACCESS_TOKEN}}"
            "SENTRY_AUTH_TOKEN=${{env.SENTRY_AUTH_TOKEN}}"
            "AWS_ACCESS_KEY_ID=${{env.AWS_ACCESS_KEY_ID}}"
            "AWS_SECRET_ACCESS_KEY=${{env.AWS_SECRET_ACCESS_KEY}}"
            "AWS_SESSION_TOKEN=${{env.AWS_SESSION_TOKEN}}"
      - name: Create comment with build information
        if: always()
        run: yarn universe comment-build-info
        env:
          GITHUB_ACCESS_TOKEN: ${{env.GITHUB_ACCESS_TOKEN}}
          BUILD_STATUS: ${{ steps.build-docker-image.outcome }}
  production-build:
    name: Production Build
    runs-on: self-hosted
    timeout-minutes: 60
    permissions:
      id-token: write
      contents: write
    env:
      STAGE: production
    if: "${{ github.ref == 'refs/heads/master' && contains(github.event.head_commit.message, 'build: update version') && github.event.head_commit.author.name == 'rzpcibot' }}"
    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.CI_BOT_TOKEN }}
      - name: Setup Node v14.19
        uses: actions/setup-node@v2
        with:
          node-version: "14.19"
      - name: Install Yarn
        run: npm install -g yarn
      - name: Setup Cache & Install Dependencies
        uses: bahmutov/npm-install@v1.8.15
        with:
          install-command: yarn --frozen-lockfile
      - name: Set Version
        run: yarn universe set-version
      - name: Login to Harbor
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.HARBOR_DOCKER_USERNAME }}
          password: ${{ secrets.HARBOR_DOCKER_PASSWORD }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ env.AWS_S3_PROD_ROLE }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-duration-seconds: 900
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Docker Image
        id: build-docker-image
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{env.DOCKER_REGISTRY}}/razorpay/${{env.APP_NAME}}:${{env.VERSION}}
          push: true
          file: ./Dockerfile
          build-args: |
            APP_NAME=${{env.APP_NAME}}
            STAGE=${{env.STAGE}}
            UNIVERSE_PUBLIC_GITHUB_SHA=${{env.UNIVERSE_PUBLIC_GITHUB_SHA}}
            AWS_S3_BUCKET_NAME=${{env.AWS_S3_PROD_BUCKET_NAME}}
            AWS_DEFAULT_REGION=${{env.AWS_DEFAULT_REGION}}
            VERSION=${{env.VERSION}}
          secrets: |
            "GITHUB_ACCESS_TOKEN=${{env.GITHUB_ACCESS_TOKEN}}"
            "SENTRY_AUTH_TOKEN=${{env.SENTRY_AUTH_TOKEN}}"
            "AWS_ACCESS_KEY_ID=${{env.AWS_ACCESS_KEY_ID}}"
            "AWS_SECRET_ACCESS_KEY=${{env.AWS_SECRET_ACCESS_KEY}}"
            "AWS_SESSION_TOKEN=${{env.AWS_SESSION_TOKEN}}"
  devstack-build:
    name: Devstack Build
    runs-on: self-hosted
    timeout-minutes: 60
    permissions:
      id-token: write
      contents: write
    env:
      STAGE: devstack
    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.CI_BOT_TOKEN }}
      - name: Setup Node v14.19
        uses: actions/setup-node@v2
        with:
          node-version: "14.19"
      - name: Install Yarn
        run: npm install -g yarn
      - name: Setup Cache & Install Dependencies
        uses: bahmutov/npm-install@v1.8.15
        with:
          install-command: yarn --frozen-lockfile
      - name: Set Version
        run: yarn universe set-version
      - name: Login to Harbor
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.HARBOR_DOCKER_USERNAME }}
          password: ${{ secrets.HARBOR_DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Docker Image
        id: build-docker-image
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{env.DOCKER_REGISTRY}}/razorpay/${{env.APP_NAME}}:${{env.VERSION}}
          push: true
          file: ./Dockerfile.devstack
          build-args: |
            APP_NAME=${{env.APP_NAME}}
            STAGE=${{env.STAGE}}
            UNIVERSE_PUBLIC_GITHUB_SHA=${{env.UNIVERSE_PUBLIC_GITHUB_SHA}}
            AWS_S3_BUCKET_NAME=${{env.AWS_S3_STAGE_BUCKET_NAME}}
            AWS_DEFAULT_REGION=${{env.AWS_DEFAULT_REGION}}
            VERSION=${{env.VERSION}}
          secrets: |
            "GITHUB_ACCESS_TOKEN=${{env.GITHUB_ACCESS_TOKEN}}"
            "SENTRY_AUTH_TOKEN=${{env.SENTRY_AUTH_TOKEN}}"
            "AWS_ACCESS_KEY_ID=${{env.AWS_ACCESS_KEY_ID}}"
            "AWS_SECRET_ACCESS_KEY=${{env.AWS_SECRET_ACCESS_KEY}}"
            "AWS_SESSION_TOKEN=${{env.AWS_SESSION_TOKEN}}"
